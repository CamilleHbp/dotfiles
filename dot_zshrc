# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load 
ZSH_THEME="powerlevel10k/powerlevel10k"

# Disable oh-my-zsh auto-updates: The oh-my-zsh folder is not a git folder but is managed by chezmoi
zstyle ':omz:update' mode disabled  

# Change the ZSH_CUSTOM folder. It cannot be tracked since it is implicitely created by chezmoiexternal. See: https://github.com/twpayne/chezmoi/issues/1574
ZSH_CUSTOM=$HOME/.config/oh-my-zsh


# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# fzf-tab needs to be loaded after compinit, but before other zsh-auto-suggestions. See: https://github.com/Aloxaf/fzf-tab#install
autoload -Uz compinit && compinit
plugins=(
  argocd
  git
  kubectl
  my-functions
  poetry
  poetry-env
  pyenv
  vi-mode
  fzf-tab
  zsh-autosuggestions
  zsh-history-substring-search
  zsh-syntax-highlighting
)

# Add completions to Oh-My-Zsh: see https://github.com/zsh-users/zsh-completions/issues/603
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

source $ZSH/oh-my-zsh.sh

# ---------------------------------------------------------------------------- #
#                              User configuration                              #
# ---------------------------------------------------------------------------- #
# You may need to manually set your language environment
export LANG=en_GB.UTF-8

# ------------------------------ Powershell 10k ------------------------------ #
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# Source fuzzy completion
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ------------------------------------ NVM ----------------------------------- #
export NVM_DIR="$HOME/.nvm"
local brew_prefix=$(brew --prefix)
[ -s "${brew_prefix}/opt/nvm/nvm.sh" ] && \. "${brew_prefix}/opt/nvm/nvm.sh" # This loads nvm
[ -s "${brew_prefix}/opt/nvm/etc/bash_completion.d/nvm" ] && \. "${brew_prefix}/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

# ------------------------------------ VIM ----------------------------------- #
# Set default editor to VIM
export EDITOR=nvim
export VISUAL="$EDITOR"

# ---------------------------------- TheFuck --------------------------------- #
# Set TheFuck alias and key binding.
# The plugin doesn't seem to function when thefuck is installed through Homebrew
# This reproduce the plugin's behaviour
# Register alias
[[ ! -a $ZSH_CACHE_DIR/thefuck ]] && thefuck --alias > $ZSH_CACHE_DIR/thefuck
source $ZSH_CACHE_DIR/thefuck

fuck-command-line() {
    local FUCK="$(THEFUCK_REQUIRE_CONFIRMATION=0 thefuck $(fc -ln -1 | tail -n 1) 2> /dev/null)"
    [[ -z $FUCK ]] && echo -n -e "\a" && return
    BUFFER=$FUCK
    zle end-of-line
}

# Register the function as a widget
zle -N fuck-command-line

# TheFuck shortcut keys: [Esc] [Esc]
bindkey -M emacs '\e\e' fuck-command-line
bindkey -M vicmd '\e\e' fuck-command-line
bindkey -M viins '\e\e' fuck-command-line
# ---------------------------------------------------------------------------- #
