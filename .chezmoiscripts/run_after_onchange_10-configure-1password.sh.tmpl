#!/bin/sh

# ---------------------------------------------------------------------------- #
#                          Unofficial Bash Strict Mode                         #
# ---------------------------------------------------------------------------- #
# See http://redsymbol.net/articles/unofficial-bash-strict-mode/
# -e: exit on error
# -u: exit on unset variables
# -o pipefail: prevents errors in a pipeline from being masked 
set -euo pipefail
# IFS (Internal Field Separator): controls what Bash calls word splitting.
# When set to a string, each character in the string is considered by Bash to separate words
IFS=$'\n\t'

# ---------------------------------------------------------------------------- #
#                                     Logs                                     #
# ---------------------------------------------------------------------------- #
log_color() {
    wait
    color_code="$1"
    shift
    printf "\033[${color_code}m%s\033[0m\n" "$*" >&2
}
# -------------------------------- Log colours ------------------------------- #
log_blue() { log_color "0;34" "$@" ; }
log_green() { log_color "0;32" "$@" ; }
log_orange() { log_color "0;33" "$@" ; }
log_red() { log_color "0;31" "$@" ; }
# --------------------------------- Log state -------------------------------- #
log_error() { log_red "‚ùå $@" ; }
log_success() { log_green "‚úÖ $@" ; }
log_task() { log_blue "üîÉ $@" ; }
log_warning() { log_orange "‚ö†Ô∏è $@" ; }
# ---------------------------- Log exit functions ---------------------------- #
error() { log_error "$@" ; exit 1 ; }
success() { log_success "$@" ; exit 0 ; }

# ---------------------------------------------------------------------------- #
#                                    Script                                    #
# ---------------------------------------------------------------------------- #
log_task "[1password] SETUP"

# ------------------ Exit if this is not a personal machine ------------------ #
{{- if not .personal -}}
    return 0
{{- end -}}

# ---------------------------------------------------------------------------- #
#                        Add 1Password acount and signin                       #
# ---------------------------------------------------------------------------- #
log_task "[SSH] 1password add user account"
op account add --address {{ .op_subdomain }}.1password.com --email {{ .op_email | quote }} --secret-key {{ .op_secret | quote }}
log_success "[SSH] 1password account added"

# There is an issue calling the eval function inside a script. See https://github.com/twpayne/chezmoi/issues/2630
# For now, removing the `op signin` call causes chezmoi to prompt for the password, which works in our case
# log_task "[SSH] 1password signin"
# eval $(op signin --account {{ .op_subdomain }})
# log_success "[SSH] 1password signed in"

log_success "[1password] DONE"
